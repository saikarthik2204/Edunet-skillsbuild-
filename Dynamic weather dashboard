<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Enhanced Weather Dashboard</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<style>
  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

  *{margin:0;padding:0;box-sizing:border-box}
  body{
    font-family:'Inter',sans-serif;
    height:100vh;
    overflow:hidden;
    background:linear-gradient(135deg,#667eea 0%,#764ba2 100%);
    position:relative;
  }
  canvas{position:fixed;top:0;left:0;width:100%;height:100%;z-index:0}
  .weather-container{position:relative;z-index:10;height:100vh;display:flex;align-items:center;justify-content:center;padding:20px}
  .weather-app{
    background:rgba(255,255,255,.1);
    backdrop-filter:blur(30px);
    border:1px solid rgba(255,255,255,.2);
    border-radius:30px;
    padding:40px;
    max-width:900px;
    width:100%;
    box-shadow:0 25px 45px rgba(0,0,0,.1),inset 0 1px 0 rgba(255,255,255,.2);
    animation:slideIn .8s ease-out;
  }
  @keyframes slideIn{from{opacity:0;transform:translateY(50px) scale(.95)}to{opacity:1;transform:translateY(0) scale(1)}}
  .search-section{display:flex;gap:15px;margin-bottom:30px;flex-wrap:wrap}
  .search-input-container{position:relative;flex:1;min-width:200px}
  .search-input,.state-select,.city-select{
    width:100%;padding:15px 20px;border-radius:15px;font-size:16px;outline:none;
    background:rgba(255,255,255,.15);border:2px solid rgba(255,255,255,.2);color:#fff;transition:.3s;
  }
  .search-input:focus,.state-select:focus,.city-select:focus{
    background:rgba(255,255,255,.2);border-color:rgba(255,255,255,.4);transform:translateY(-2px);
  }
  .search-input::placeholder{color:rgba(255,255,255,.7)}
  .state-select,.city-select{cursor:pointer;min-width:150px}
  .city-select:disabled{opacity:.6;cursor:not-allowed}
  .search-btn{
    padding:15px 25px;background:linear-gradient(135deg,#667eea,#764ba2);
    border:none;border-radius:15px;color:#fff;font-weight:600;cursor:pointer;
    box-shadow:0 4px 15px rgba(102,126,234,.4);transition:.3s;
  }
  .search-btn:hover{transform:translateY(-3px);box-shadow:0 8px 25px rgba(102,126,234,.6)}
  .current-weather{text-align:center;margin-bottom:40px}
  .location-name{font-size:28px;font-weight:300;color:rgba(255,255,255,.9);margin-bottom:10px;text-shadow:0 2px 10px rgba(0,0,0,.1)}
  .main-temp{font-size:80px;font-weight:700;color:#fff;margin:20px 0;text-shadow:0 4px 20px rgba(0,0,0,.2);animation:pulse 2s ease-in-out infinite alternate}
  @keyframes pulse{from{transform:scale(1)}to{transform:scale(1.02)}}
  .weather-desc{font-size:24px;color:rgba(255,255,255,.8);text-transform:capitalize;margin-bottom:30px}
  .weather-details{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));gap:20px;margin-bottom:40px}
  .detail-card{
    background:rgba(255,255,255,.1);padding:20px;border-radius:20px;text-align:center;
    border:1px solid rgba(255,255,255,.2);transition:.3s;
  }
  .detail-card:hover{background:rgba(255,255,255,.15);transform:translateY(-5px);box-shadow:0 10px 25px rgba(0,0,0,.1)}
  .detail-label{font-size:14px;color:rgba(255,255,255,.7);margin-bottom:8px;text-transform:uppercase;letter-spacing:1px}
  .detail-value{font-size:22px;font-weight:600;color:#fff}
  .time-controls{display:flex;justify-content:center;gap:15px;margin-bottom:30px}
  .control-btn{
    padding:12px 25px;background:rgba(255,255,255,.1);border:2px solid rgba(255,255,255,.2);
    border-radius:25px;color:#fff;font-weight:500;cursor:pointer;transition:.3s;
  }
  .control-btn.active{background:rgba(255,255,255,.3);border-color:rgba(255,255,255,.5);transform:scale(1.05)}
  .control-btn:hover{background:rgba(255,255,255,.2);transform:translateY(-2px)}
  .forecast-section h3{text-align:center;color:#fff;font-size:20px;font-weight:500;margin-bottom:25px}
  .forecast-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(120px,1fr));gap:15px}
  .forecast-card{
    background:rgba(255,255,255,.1);border:1px solid rgba(255,255,255,.2);border-radius:20px;
    padding:20px 15px;text-align:center;cursor:pointer;position:relative;overflow:hidden;
    transition:.4s;
  }
  .forecast-card::before{
    content:'';position:absolute;top:0;left:-100%;width:100%;height:100%;
    background:linear-gradient(90deg,transparent,rgba(255,255,255,.1),transparent);
    transition:left .5s;
  }
  .forecast-card:hover::before{left:100%}
  .forecast-card:hover{background:rgba(255,255,255,.2);transform:translateY(-8px) scale(1.02);box-shadow:0 15px 35px rgba(0,0,0,.15)}
  .forecast-card.selected{background:rgba(255,255,255,.25);border-color:#ffd700;transform:scale(1.05)}
  .forecast-day{font-size:12px;color:rgba(255,255,255,.8);margin-bottom:10px;font-weight:500}
  .forecast-icon{width:50px;height:50px;margin:10px auto;border-radius:50%;background:rgba(255,255,255,.1);display:flex;align-items:center;justify-content:center}
  .forecast-icon img{width:35px;height:35px}
  .forecast-desc{font-size:11px;color:rgba(255,255,255,.9);margin:8px 0;font-weight:400}
  .forecast-temp{font-size:14px;color:#fff;font-weight:600}
  .loading{text-align:center;color:rgba(255,255,255,.8);font-size:18px;padding:20px}
  @media(max-width:768px){
    .weather-app{padding:30px 20px;margin:10px}
    .main-temp{font-size:60px}
    .search-section{flex-direction:column}
    .weather-details{grid-template-columns:1fr 1fr}
    .forecast-grid{grid-template-columns:repeat(auto-fit,minmax(100px,1fr))}
  }
</style>
</head>
<body>
<canvas id="weather-canvas"></canvas>

<div class="weather-container">
  <div class="weather-app">
    <div class="search-section">
      <div class="search-input-container">
        <input type="text" class="search-input" id="city-input" placeholder="Enter city name...">
      </div>
      <select class="state-select" id="state-select">
        <option value="">Select State</option>
        <option>Andhra Pradesh</option><option>Arunachal Pradesh</option><option>Assam</option><option>Bihar</option>
        <option>Chhattisgarh</option><option>Goa</option><option>Gujarat</option><option>Haryana</option>
        <option>Himachal Pradesh</option><option>Jharkhand</option><option>Karnataka</option><option>Kerala</option>
        <option>Madhya Pradesh</option><option>Maharashtra</option><option>Manipur</option><option>Meghalaya</option>
        <option>Mizoram</option><option>Nagaland</option><option>Odisha</option><option>Punjab</option>
        <option>Rajasthan</option><option>Sikkim</option><option>Tamil Nadu</option><option>Telangana</option>
        <option>Tripura</option><option>Uttar Pradesh</option><option>Uttarakhand</option><option>West Bengal</option>
      </select>
      <select class="city-select" id="city-select" disabled>
        <option value="">Select City</option>
      </select>
      <button class="search-btn" onclick="performSearch()">Search</button>
    </div>

    <div class="current-weather">
      <div class="location-name" id="location">Detecting location...</div>
      <div class="main-temp" id="temperature">--°C</div>
      <div class="weather-desc" id="description">Loading...</div>
    </div>

    <div class="weather-details">
      <div class="detail-card"><div class="detail-label">Humidity</div><div class="detail-value" id="humidity">--%</div></div>
      <div class="detail-card"><div class="detail-label">Wind Speed</div><div class="detail-value" id="wind">-- km/h</div></div>
      <div class="detail-card"><div class="detail-label">Feels Like</div><div class="detail-value" id="feels-like">--°C</div></div>
      <div class="detail-card"><div class="detail-label">Visibility</div><div class="detail-value" id="visibility">-- km</div></div>
    </div>

    <div class="time-controls">
      <button class="control-btn" id="past-btn">Past 7 Days</button>
      <button class="control-btn active" id="next-btn">Next 7 Days</button>
    </div>

    <div class="forecast-section">
      <h3>7-Day Forecast</h3>
      <div class="forecast-grid" id="forecast"></div>
    </div>
  </div>
</div>

<script>
/* ---------- Canvas Weather Animation ---------- */
const canvas = document.getElementById('weather-canvas');
const ctx = canvas.getContext('2d');
let particles = [], clouds = [], stars = [], currentWeather = 'clear', isNight = false;
function resize(){canvas.width=innerWidth;canvas.height=innerHeight}
resize();addEventListener('resize',resize);

/* Clouds */
function initClouds(){clouds=[];for(let i=0;i<12;i++)clouds.push({x:Math.random()*(canvas.width+300)-150,
    y:Math.random()*canvas.height*0.5,size:60+Math.random()*150,opacity:.2+Math.random()*.5,speed:.3+Math.random()*.8});}
initClouds();

/* Stars */
function initStars(){stars=[];for(let i=0;i<300;i++)stars.push({x:Math.random()*canvas.width,
    y:Math.random()*canvas.height*0.7,size:.5+Math.random()*2,twinkle:Math.random()*Math.PI*2,
    twinkleSpeed:.015+Math.random()*.025});}

/* Particles (rain / snow / hail) */
function initParticles(weather){
  particles=[];
  const count = weather.includes('rain')?400: weather.includes('snow')?300: weather.includes('thunder')?200:0;
  for(let i=0;i<count;i++){
    particles.push({
      x:Math.random()*canvas.width,
      y:Math.random()*canvas.height,
      speed: weather.includes('rain')?12+Math.random()*8: weather.includes('snow')?3+Math.random()*3:
             weather.includes('thunder')?15+Math.random()*10:5,
      size: weather.includes('rain')?2+Math.random()*3: weather.includes('snow')?4+Math.random()*6:2,
      opacity:.5+Math.random()*.5,
      angle: weather.includes('rain')?Math.PI/5:0,
      windOffset:Math.random()*Math.PI*2
    });
  }
}

/* Draw helpers */
function drawSun(){
  const cx=canvas.width-200, cy=150;
  for(let i=0;i<3;i++){
    const r=120+i*40, op=.6-i*.15;
    const grad=ctx.createRadialGradient(cx,cy,0,cx,cy,r);
    grad.addColorStop(0,`rgba(255,220,100,${op})`);
    grad.addColorStop(.4,`rgba(255,200,50,${op*.6})`);
    grad.addColorStop(1,'rgba(255,180,0,0)');
    ctx.fillStyle=grad;
    ctx.beginPath();ctx.arc(cx,cy,r,0,Math.PI*2);ctx.fill();
  }
  // core
  const core=ctx.createRadialGradient(cx,cy,0,cx,cy,40);
  core.addColorStop(0,'rgba(255,255,180,0.9)');
  core.addColorStop(1,'rgba(255,200,0,0)');
  ctx.fillStyle=core;
  ctx.beginPath();ctx.arc(cx,cy,40,0,Math.PI*2);ctx.fill();

  // rotating rays
  const time=Date.now()*0.001;
  for(let i=0;i<12;i++){
    const angle=time+i*Math.PI/6;
    const len=80+Math.sin(time*2+i)*10;
    ctx.save();
    ctx.translate(cx,cy);
    ctx.rotate(angle);
    const rayGrad=ctx.createLinearGradient(0,0,0,-len);
    rayGrad.addColorStop(0,'rgba(255,230,100,0.6)');
    rayGrad.addColorStop(1,'rgba(255,230,100,0)');
    ctx.strokeStyle=rayGrad;
    ctx.lineWidth=6;
    ctx.beginPath();ctx.moveTo(0,0);ctx.lineTo(0,-len);
    ctx.stroke();
    ctx.restore();
  }
}
function drawMoon(){
  const cx=canvas.width-180, cy=150, r=50;
  ctx.fillStyle='rgba(255,255,210,0.9)';
  ctx.beginPath();ctx.arc(cx,cy,r,0,Math.PI*2);ctx.fill();
  ctx.fillStyle='rgba(30,30,30,0.8)';
  ctx.beginPath();ctx.arc(cx+20,cy-10,r,0,Math.PI*2);ctx.fill();
}
function drawClouds(){
  clouds.forEach(c=>{
    ctx.fillStyle=`rgba(255,255,255,${c.opacity})`;
    ctx.beginPath();
    ctx.arc(c.x,c.y,c.size*0.6,0,Math.PI*2);
    ctx.arc(c.x+c.size*0.4,c.y-c.size*0.2,c.size*0.5,0,Math.PI*2);
    ctx.arc(c.x-c.size*0.4,c.y-c.size*0.2,c.size*0.5,0,Math.PI*2);
    ctx.fill();
    c.x+=c.speed;
    if(c.x- c.size>canvas.width) c.x=-c.size;
  });
}
function drawStars(){
  stars.forEach(s=>{
    const alpha=.5+Math.sin(s.twinkle)*.5;
    ctx.fillStyle=`rgba(255,255,255,${alpha})`;
    ctx.beginPath();ctx.arc(s.x,s.y,s.size,0,Math.PI*2);ctx.fill();
    s.twinkle+=s.twinkleSpeed;
  });
}
function drawParticles(){
  particles.forEach(p=>{
    ctx.save();
    ctx.translate(p.x,p.y);
    ctx.rotate(p.angle);
    ctx.fillStyle=`rgba(255,255,255,${p.opacity})`;
    ctx.beginPath();
    ctx.arc(0,0,p.size,0,Math.PI*2);
    ctx.fill();
    ctx.restore();
    // wind sway
    p.x+=Math.cos(p.windOffset+Date.now()*0.0005)*0.5;
    p.y+=p.speed;
    if(p.y>canvas.height) p.y=-p.size;
    if(p.x>canvas.width) p.x=-p.size;
    if(p.x< -p.size) p.x=canvas.width+p.size;
  });
}
function animate(){
  ctx.clearRect(0,0,canvas.width,canvas.height);
  if(isNight){drawStars();drawMoon();}
  else{drawSun();}
  drawClouds();
  if(particles.length) drawParticles();
  requestAnimationFrame(animate);
}
animate();

/* ---------- Weather Data (Mock) ---------- */
const stateCities = {
  "Andhra Pradesh":["Visakhapatnam","Vijayawada","Guntur","Nellore","Kurnool","Rajahmundry","Tirupati","Kadapa","Anantapur","Kakinada"],
  "Arunachal Pradesh":["Itanagar","Naharlagun","Pasighat","Tezpur","Bomdila","Ziro","Aalo","Tezu","Khonsa","Seppa"],
  "Assam":["Guwahati","Dibrugarh
